name: 'Terraform'

on:
  push:
    branches: [ "*" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2

    - name: Terraform Init
      run: terraform init

    - name: tfsec
      uses: aquasecurity/tfsec-action@a73ebc46fba54691e25cbe901656e7b205fb9bf2 # v1.0.0
      with:
        soft_fail: true
  
    - name: Checkov GitHub Action
      uses: bridgecrewio/checkov-action@9b463a337f7113e586abb33353eb4507177f5919 # v12
      with:
        soft_fail: true

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: terraform plan
      run: terraform plan -out "planfile"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: terraform apply
      run:  terraform apply -input=false "planfile"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: terraform destroy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform destroy -auto-approve

    - name: clean up
      run: |
         chmod +x ./scripts/clean.sh
         ./scripts/clean.sh
         rm -r ./* .git*
      shell: bash